{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAiB,CACnBC,SAAU,YACVC,cAAc,EAChBC,QAAS,IACPC,SAAQ,GAENC,EAAO,CACXC,WAAYC,SAASC,cAAc,qBACnCC,UAAWF,SAASC,cAAc,oBAClCE,OAAQH,SAASC,cAAc,uBAsBjC,SAASG,EAAcV,EAAUW,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACpCC,YAAW,KACPH,EACHF,EAAQ,C,SAAEb,E,MAAUW,IAEpBG,EAAO,C,SAAEd,E,MAAUW,GAAQ,GAEzBA,EAAM,G,CA7BaL,SAASC,cAAc,UAE/BY,iBAAiB,SAAUC,IAC7C,IAAIC,EAAQC,OAAOlB,EAAKC,WAAWkB,OACnC,MAAMC,EAAOF,OAAOlB,EAAKI,UAAUe,OAC7Bd,EAASa,OAAOlB,EAAKK,OAAOc,OAEpC,IAAK,IAAIE,EAAQ,EAAGA,GAAShB,EAAQgB,IACjCf,EAAce,EAAOJ,GAChBK,MAAK,EAAC1B,SAAEA,EAAQW,MAAEA,MACnBd,EAAA8B,OAAOC,QAAQ,uBAAqB5B,QAAiBW,MAAWZ,EAAE,IAEjE8B,OAAM,EAAC7B,SAAEA,EAAQW,MAAEA,MACpBd,EAAA8B,OAAOG,QAAQ,sBAAoB9B,QAAeW,MAAWZ,EAAE,IAEnEsB,GAASG,EAEXJ,EAAEW,gBAAgB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst messageOptions = {\n    position: \"right-top\",\n    clickToClose: true,\n  timeout: 5000,\n    useIcon:false,\n}\nconst refs = {\n  firstDelay: document.querySelector('input[name=delay]'),\n  delayStep: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n} \nconst creatPromisesButton = document.querySelector('button');\n\ncreatPromisesButton.addEventListener('click', (e) => {\n  let delay = Number(refs.firstDelay.value);\n  const step = Number(refs.delayStep.value);\n  const amount = Number(refs.amount.value);\n\nfor (let index = 1; index <= amount; index++) {\n    createPromise(index, delay)\n        .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, messageOptions);\n        })\n        .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, messageOptions);\n        });\n    delay += step;\n} \n  e.preventDefault();\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => { \n      if (shouldResolve) {\n       resolve({ position, delay });\n      } else {\n       reject({ position, delay });\n      }\n      }, delay);\n     }\n  )\n};\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$messageOptions","position","clickToClose","timeout","useIcon","$47d4ff9957288465$var$refs","firstDelay","document","querySelector","delayStep","amount","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","delay1","Number","value","step","index","then","Notify","success","catch","failure","preventDefault"],"version":3,"file":"03-promises.0181c9df.js.map"}